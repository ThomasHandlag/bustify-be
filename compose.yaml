# docker-compose.yml
# This file is used to define and run multi-container Docker applications.
# It sets up a Spring Boot application with a MySQL database.
services:
  # server:
  #   build: .
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:mysql://server.aptech.io:3307/busify?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
  #     - SPRING_DATASOURCE_USERNAME=busify_user
  #     - SPRING_DATASOURCE_PASSWORD=busify_password
  #     - SPRING_JPA_HIBERNATE_DDL_AUTO=update
  #     - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/busify
  #   depends_on:
  #     - mongodb
  #     - redis
  mysql:
    image: "mysql:latest"
    environment:
      - "MYSQL_DATABASE=busify"
      - "MYSQL_PASSWORD=1111"
      - "MYSQL_ROOT_PASSWORD=1111"
    ports:
      - "3306:3306"
      
  phpmyadmin:
    image: "phpmyadmin:latest"
    ports:
      - "8082:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
    depends_on:
      - mysql
  mongo:
    image: "mongo:latest"
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=busify
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example

  mongo_express:
    image: "mongo-express:latest"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass
    ports:
      - "8081:8081"
    depends_on:
      - mongo

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
volumes:
  db_data:
